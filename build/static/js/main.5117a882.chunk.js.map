{"version":3,"sources":["App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","padding","textAlign","fullWidth","flexBasis","hide","display","Plant","props","classes","plant","current","test","moment","m","methods","length","method","c","cycles","cycle","endMonth","startMonth","startDate","year","startDay","endDate","endDay","isBetween","Accordion","className","AccordionSummary","expandIcon","Typography","heading","name","AccordionDetails","Grid","map","i","item","xs","type","durationMin","durationMax","Plants","plants","Now","cropTypes","App","prefersDarkMode","useMediaQuery","React","useMemo","createMuiTheme","palette","ThemeProvider","CssBaseline","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.5117a882.chunk.js","sourcesContent":["import React from 'react';\n\nimport moment from 'moment';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\n\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport './App.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    padding: '1rem',\n    textAlign: 'left',\n  },\n  fullWidth: {\n    width: '100%',\n    flexBasis: '100%',\n  },\n  hide: {\n    display: 'none',\n  }\n}));\n\nfunction Plant(props) {\n  const classes = useStyles();\n  const plant = props.plant;\n  let current = false;\n\n  let test = moment();\n\n  for (let m = 0; m < plant.methods.length; m++) {\n    let method = plant.methods[m];\n    for (let c = 0; c < method.cycles.length; c++) {\n      let cycle = method.cycles[c];\n\n      if (cycle.endMonth < cycle.startMonth) {\n        //carryover\n        let startDate = moment(moment(test).year() + '-'+ cycle.startMonth + '-'+ cycle.startDay);\n        let endDate = moment(moment(test).year() + 1 + '-'+ cycle.endMonth + '-'+ cycle.endDay);\n        current = moment(test).isBetween(startDate, endDate);\n\n        if (!current) {\n          startDate = moment(moment(test).year() - 1 + '-'+ cycle.startMonth + '-'+ cycle.startDay);\n          endDate = moment(moment(test).year() + '-'+ cycle.endMonth + '-'+ cycle.endDay);\n          current = moment(test).isBetween(startDate, endDate);\n        }\n      } else {\n        let startDate = moment(moment(test).year() + '-'+ cycle.startMonth + '-'+ cycle.startDay);\n        let endDate = moment(moment(test).year() + '-'+ cycle.endMonth + '-'+ cycle.endDay);\n        current = moment(test).isBetween(startDate, endDate);\n      }\n    }\n  }\n\n  return (\n    <Accordion className={current ? '' : classes.hide}>\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n        <Typography className={classes.heading}>\n          {plant.name}\n        </Typography>\n      </AccordionSummary>\n      <AccordionDetails expandIcon={<ExpandMoreIcon />}>\n        <Grid className={classes.fullWidth}>\n          {plant.methods.map((method, i) =>\n            <Grid item key={i} xs={12} className={classes.root}>\n              <Typography>\n                {method.type}\n              </Typography>\n              <Typography>\n                {method.durationMin} - {method.durationMax} days\n              </Typography>\n              <Grid className={classes.fullWidth}>\n                {method.cycles.map((cycle, i) =>\n                  <Grid item key={i} xs={12} className={classes.root}>\n                    <Typography>\n                      {cycle.startMonth}/{cycle.startDay} - {cycle.endMonth}/{cycle.endDay}\n                    </Typography>\n                  </Grid>\n                )}\n              </Grid>\n            </Grid>\n          )}\n        </Grid>\n      </AccordionDetails>\n    </Accordion>\n  );\n}\n\nfunction Plants(props) {\n  const plants = props.plants;\n\n  return (\n    <div className=\"plants\">\n      {plants.map((plant, i) =>\n        <Plant key={i} plant={plant} />\n      )}\n    </div>\n  );\n}\n\nfunction Now(props) {\n  return (\n    <Plants plants={cropTypes} />\n  );\n}\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline/>\n        <div className=\"App\">\n          <Now />\n        </div>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nlet cropTypes = [\n  {\n    \"name\": \"Artichokes, Globe\", \n    \"methods\": [\n      {\n        \"type\": \"transplant\",\n        \"durationMin\": 120,\n        \"durationMax\": 180,\n        \"cycles\": [\n          {\n            \"startMonth\": 1,\n            \"startDay\": 15,\n            \"endMonth\": 4,\n            \"endDay\": 1\n          }\n        ]\n      },\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 120,\n        \"durationMax\": 180,\n        \"cycles\": [\n          {\n            \"startMonth\": 10,\n            \"startDay\": 1,\n            \"endMonth\": 12,\n            \"endDay\": 15\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Artichokes, Jerusalem\", \n    \"methods\": [\n      {\n        \"type\": \"transplant\",\n        \"durationMin\": 180,\n        \"durationMax\": 240,\n        \"cycles\": [\n          {\n            \"startMonth\": 1,\n            \"startDay\": 15,\n            \"endMonth\": 6,\n            \"endDay\": 1\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Asparagus\",\n    \"methods\": [\n      {\n        \"type\": \"transplant\",\n        \"durationMin\": 365,\n        \"durationMax\": 730,\n        \"cycles\": [\n          {\n            \"startMonth\": 11,\n            \"startDay\": 1,\n            \"endMonth\": 2,\n            \"endDay\": 15\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Basil\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 60,\n        \"durationMax\": 75,\n        \"cycles\": [\n          {\n            \"startMonth\": 2,\n            \"startDay\": 15,\n            \"endMonth\": 6,\n            \"endDay\": 1\n          }\n        ]\n      },\n      {\n        \"type\": \"transplant\",\n        \"durationMin\": 30,\n        \"durationMax\": 30,\n        \"cycles\": [\n          {\n            \"startMonth\": 3,\n            \"startDay\": 1,\n            \"endMonth\": 6,\n            \"endDay\": 1\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Beans, Lima\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 60,\n        \"durationMax\": 100,\n        \"cycles\": [\n          {\n            \"startMonth\": 3,\n            \"startDay\": 15,\n            \"endMonth\": 4,\n            \"endDay\": 15\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Beans, Pinto\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 60,\n        \"durationMax\": 90,\n        \"cycles\": [\n          {\n            \"startMonth\": 7,\n            \"startDay\": 15,\n            \"endMonth\": 8,\n            \"endDay\": 1\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Beans, Snap\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 60,\n        \"durationMax\": 90,\n        \"cycles\": [\n          {\n            \"startMonth\": 3,\n            \"startDay\": 15,\n            \"endMonth\": 5,\n            \"endDay\": 1\n          },\n          {\n            \"startMonth\": 7,\n            \"startDay\": 15,\n            \"endMonth\": 9,\n            \"endDay\": 15\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Beans, Yardlong\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 60,\n        \"durationMax\": 90,\n        \"cycles\": [\n          {\n            \"startMonth\": 3,\n            \"startDay\": 15,\n            \"endMonth\": 7,\n            \"endDay\": 15\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Beets\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 60,\n        \"durationMax\": 80,\n        \"cycles\": [\n          {\n            \"startMonth\": 9,\n            \"startDay\": 15,\n            \"endMonth\": 3,\n            \"endDay\": 15\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Blackeyed Peas\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 90,\n        \"durationMax\": 120,\n        \"cycles\": [\n          {\n            \"startMonth\": 4,\n            \"startDay\": 1,\n            \"endMonth\": 9,\n            \"endDay\": 1\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Bok Choy\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 45,\n        \"durationMax\": 45,\n        \"cycles\": [\n          {\n            \"startMonth\": 8,\n            \"startDay\": 15,\n            \"endMonth\": 3,\n            \"endDay\": 1\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Broccoli\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 120,\n        \"durationMax\": 130,\n        \"cycles\": [\n          {\n            \"startMonth\": 8,\n            \"startDay\": 15,\n            \"endMonth\": 1,\n            \"endDay\": 15\n          }\n        ]\n      },\n      {\n        \"type\": \"transplant\",\n        \"durationMin\": 90,\n        \"durationMax\": 100,\n        \"cycles\": [\n          {\n            \"startMonth\": 9,\n            \"startDay\": 15,\n            \"endMonth\": 2,\n            \"endDay\": 1\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Brussel Sprouts\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 130,\n        \"durationMax\": 150,\n        \"cycles\": [\n          {\n            \"startMonth\": 8,\n            \"startDay\": 15,\n            \"endMonth\": 12,\n            \"endDay\": 1\n          }\n        ]\n      },\n      {\n        \"type\": \"transplant\",\n        \"durationMin\": 100,\n        \"durationMax\": 120,\n        \"cycles\": [\n          {\n            \"startMonth\": 9,\n            \"startDay\": 1,\n            \"endMonth\": 12,\n            \"endDay\": 1\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Cabbage\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 120,\n        \"durationMax\": 130,\n        \"cycles\": [\n          {\n            \"startMonth\": 8,\n            \"startDay\": 15,\n            \"endMonth\": 1,\n            \"endDay\": 15\n          }\n        ]\n      },\n      {\n        \"type\": \"transplant\",\n        \"durationMin\": 80,\n        \"durationMax\": 90,\n        \"cycles\": [\n          {\n            \"startMonth\": 9,\n            \"startDay\": 15,\n            \"endMonth\": 2,\n            \"endDay\": 1\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Cabbage, Chinese\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 70,\n        \"durationMax\": 80,\n        \"cycles\": [\n          {\n            \"startMonth\": 8,\n            \"startDay\": 15,\n            \"endMonth\": 1,\n            \"endDay\": 15\n          }\n        ]\n      },\n      {\n        \"type\": \"transplant\",\n        \"durationMin\": 45,\n        \"durationMax\": 45,\n        \"cycles\": [\n          {\n            \"startMonth\": 9,\n            \"startDay\": 15,\n            \"endMonth\": 2,\n            \"endDay\": 1\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Carrots\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 60,\n        \"durationMax\": 100,\n        \"cycles\": [\n          {\n            \"startMonth\": 8,\n            \"startDay\": 1,\n            \"endMonth\": 5,\n            \"endDay\": 1\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Cauliflower\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 120,\n        \"durationMax\": 130,\n        \"cycles\": [\n          {\n            \"startMonth\": 8,\n            \"startDay\": 15,\n            \"endMonth\": 1,\n            \"endDay\": 15\n          }\n        ]\n      },\n      {\n        \"type\": \"transplant\",\n        \"durationMin\": 90,\n        \"durationMax\": 100,\n        \"cycles\": [\n          {\n            \"startMonth\": 9,\n            \"startDay\": 1,\n            \"endMonth\": 2,\n            \"endDay\": 1\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Celery\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 120,\n        \"durationMax\": 150,\n        \"cycles\": [\n          {\n            \"startMonth\": 8,\n            \"startDay\": 15,\n            \"endMonth\": 1,\n            \"endDay\": 1\n          }\n        ]\n      },\n      {\n        \"type\": \"transplant\",\n        \"durationMin\": 120,\n        \"durationMax\": 150,\n        \"cycles\": [\n          {\n            \"startMonth\": 9,\n            \"startDay\": 15,\n            \"endMonth\": 1,\n            \"endDay\": 1\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Chard\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 60,\n        \"durationMax\": 90,\n        \"cycles\": [\n          {\n            \"startMonth\": 8,\n            \"startDay\": 15,\n            \"endMonth\": 2,\n            \"endDay\": 1\n          }\n        ]\n      },\n      {\n        \"type\": \"transplant\",\n        \"durationMin\": 60,\n        \"durationMax\": 90,\n        \"cycles\": [\n          {\n            \"startMonth\": 9,\n            \"startDay\": 15,\n            \"endMonth\": 2,\n            \"endDay\": 15\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Collard Greens\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 80,\n        \"durationMax\": 80,\n        \"cycles\": [\n          {\n            \"startMonth\": 8,\n            \"startDay\": 15,\n            \"endMonth\": 3,\n            \"endDay\": 1\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Corn, Sweet\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 70,\n        \"durationMax\": 90,\n        \"cycles\": [\n          {\n            \"startMonth\": 2,\n            \"startDay\": 15,\n            \"endMonth\": 4,\n            \"endDay\": 15\n          },\n          {\n            \"startMonth\": 7,\n            \"startDay\": 15,\n            \"endMonth\": 9,\n            \"endDay\": 1\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Cucumbers\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 60,\n        \"durationMax\": 90,\n        \"cycles\": [\n          {\n            \"startMonth\": 2,\n            \"startDay\": 15,\n            \"endMonth\": 5,\n            \"endDay\": 1\n          },\n          {\n            \"startMonth\": 8,\n            \"startDay\": 15,\n            \"endMonth\": 10,\n            \"endDay\": 1\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Cucumbers, Armenian\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 55,\n        \"durationMax\": 55,\n        \"cycles\": [\n          {\n            \"startMonth\": 2,\n            \"startDay\": 15,\n            \"endMonth\": 7,\n            \"endDay\": 15\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Eggplant\",\n    \"methods\": [\n      {\n        \"type\": \"transplant\",\n        \"durationMin\": 70,\n        \"durationMax\": 120,\n        \"cycles\": [\n          {\n            \"startMonth\": 3,\n            \"startDay\": 1,\n            \"endMonth\": 4,\n            \"endDay\": 1\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Endive\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 80,\n        \"durationMax\": 120,\n        \"cycles\": [\n          {\n            \"startMonth\": 9,\n            \"startDay\": 1,\n            \"endMonth\": 2,\n            \"endDay\": 1\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Garlic\",\n    \"methods\": [\n      {\n        \"type\": \"cloves\",\n        \"durationMin\": 150,\n        \"durationMax\": 210,\n        \"cycles\": [\n          {\n            \"startMonth\": 10,\n            \"startDay\": 1,\n            \"endMonth\": 11,\n            \"endDay\": 1\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Kale\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 60,\n        \"durationMax\": 90,\n        \"cycles\": [\n          {\n            \"startMonth\": 8,\n            \"startDay\": 15,\n            \"endMonth\": 1,\n            \"endDay\": 1\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Kohlrabi\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 50,\n        \"durationMax\": 60,\n        \"cycles\": [\n          {\n            \"startMonth\": 8,\n            \"startDay\": 15,\n            \"endMonth\": 12,\n            \"endDay\": 1\n          }\n        ]\n      },\n      {\n        \"type\": \"transplant\",\n        \"durationMin\": 45,\n        \"durationMax\": 60,\n        \"cycles\": [\n          {\n            \"startMonth\": 10,\n            \"startDay\": 15,\n            \"endMonth\": 2,\n            \"endDay\": 15\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Lettuce, Head\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 50,\n        \"durationMax\": 100,\n        \"cycles\": [\n          {\n            \"startMonth\": 8,\n            \"startDay\": 15,\n            \"endMonth\": 2,\n            \"endDay\": 1\n          }\n        ]\n      },\n      {\n        \"type\": \"transplant\",\n        \"durationMin\": 50,\n        \"durationMax\": 100,\n        \"cycles\": [\n          {\n            \"startMonth\": 9,\n            \"startDay\": 15,\n            \"endMonth\": 2,\n            \"endDay\": 15\n          }\n        ]\n      }\n    ]\n  },\n  {\n    \"name\": \"Lettuce, Leaf\",\n    \"methods\": [\n      {\n        \"type\": \"seed\",\n        \"durationMin\": 50,\n        \"durationMax\": 100,\n        \"cycles\": [\n          {\n            \"startMonth\": 8,\n            \"startDay\": 15,\n            \"endMonth\": 2,\n            \"endDay\": 15\n          }\n        ]\n      },\n      {\n        \"type\": \"transplant\",\n        \"durationMin\": 50,\n        \"durationMax\": 100,\n        \"cycles\": [\n          {\n            \"startMonth\": 9,\n            \"startDay\": 15,\n            \"endMonth\": 3,\n            \"endDay\": 1\n          }\n        ]\n      }\n    ]\n  }\n];\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}